{"ast":null,"code":"import _toConsumableArray from\"/Users/ntwrkman/Desktop/frcwordl/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/ntwrkman/Desktop/frcwordl/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import{Grid}from'./components/grid/Grid';import{Keyboard}from'./components/keyboard/Keyboard';import{InfoModal}from'./components/modals/InfoModal';import{StatsModal}from'./components/modals/StatsModal';import{SettingsModal}from'./components/modals/SettingsModal';import{WIN_MESSAGES,GAME_COPIED_MESSAGE,NOT_ENOUGH_LETTERS_MESSAGE,WORD_NOT_FOUND_MESSAGE,CORRECT_WORD_MESSAGE,HARD_MODE_ALERT_MESSAGE,DISCOURAGE_INAPP_BROWSER_TEXT}from'./constants/strings';import{MAX_CHALLENGES,REVEAL_TIME_MS,WELCOME_INFO_MODAL_MS,DISCOURAGE_INAPP_BROWSERS}from'./constants/settings';import{isWordInWordList,isWinningWord,solution,findFirstUnusedReveal,unicodeLength}from'./lib/words';import{addStatsForCompletedGame,loadStats}from'./lib/stats';import{loadGameStateFromLocalStorage,saveGameStateToLocalStorage,setStoredIsHighContrastMode,getStoredIsHighContrastMode}from'./lib/localStorage';import{default as GraphemeSplitter}from'grapheme-splitter';import'./App.css';import{AlertContainer}from'./components/alerts/AlertContainer';import{useAlert}from'./context/AlertContext';import{Navbar}from'./components/navbar/Navbar';import{isInAppBrowser}from'./lib/browser';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var prefersDarkMode=window.matchMedia('(prefers-color-scheme: dark)').matches;var _useAlert=useAlert(),showErrorAlert=_useAlert.showError,showSuccessAlert=_useAlert.showSuccess;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),currentGuess=_useState2[0],setCurrentGuess=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isGameWon=_useState4[0],setIsGameWon=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isInfoModalOpen=_useState6[0],setIsInfoModalOpen=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isStatsModalOpen=_useState8[0],setIsStatsModalOpen=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isSettingsModalOpen=_useState10[0],setIsSettingsModalOpen=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),currentRowClass=_useState12[0],setCurrentRowClass=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isGameLost=_useState14[0],setIsGameLost=_useState14[1];var _useState15=useState(localStorage.getItem('theme')?localStorage.getItem('theme')==='dark':prefersDarkMode?true:false),_useState16=_slicedToArray(_useState15,2),isDarkMode=_useState16[0],setIsDarkMode=_useState16[1];var _useState17=useState(getStoredIsHighContrastMode()),_useState18=_slicedToArray(_useState17,2),isHighContrastMode=_useState18[0],setIsHighContrastMode=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),isRevealing=_useState20[0],setIsRevealing=_useState20[1];var _useState21=useState(function(){var loaded=loadGameStateFromLocalStorage();if((loaded===null||loaded===void 0?void 0:loaded.solution)!==solution){return[];}var gameWasWon=loaded.guesses.includes(solution);if(gameWasWon){setIsGameWon(true);}if(loaded.guesses.length===MAX_CHALLENGES&&!gameWasWon){setIsGameLost(true);showErrorAlert(CORRECT_WORD_MESSAGE(solution),{persist:true});}return loaded.guesses;}),_useState22=_slicedToArray(_useState21,2),guesses=_useState22[0],setGuesses=_useState22[1];var _useState23=useState(function(){return loadStats();}),_useState24=_slicedToArray(_useState23,2),stats=_useState24[0],setStats=_useState24[1];var _useState25=useState(localStorage.getItem('gameMode')?localStorage.getItem('gameMode')==='hard':false),_useState26=_slicedToArray(_useState25,2),isHardMode=_useState26[0],setIsHardMode=_useState26[1];useEffect(function(){// if no game state on load,\n// show the user the how-to info modal\nif(!loadGameStateFromLocalStorage()){setTimeout(function(){setIsInfoModalOpen(true);},WELCOME_INFO_MODAL_MS);}});useEffect(function(){DISCOURAGE_INAPP_BROWSERS&&isInAppBrowser()&&showErrorAlert(DISCOURAGE_INAPP_BROWSER_TEXT,{persist:false,durationMs:7000});},[showErrorAlert]);useEffect(function(){if(isDarkMode){document.documentElement.classList.add('dark');}else{document.documentElement.classList.remove('dark');}if(isHighContrastMode){document.documentElement.classList.add('high-contrast');}else{document.documentElement.classList.remove('high-contrast');}},[isDarkMode,isHighContrastMode]);var handleDarkMode=function handleDarkMode(isDark){setIsDarkMode(isDark);localStorage.setItem('theme',isDark?'dark':'light');};var handleHardMode=function handleHardMode(isHard){if(guesses.length===0||localStorage.getItem('gameMode')==='hard'){setIsHardMode(isHard);localStorage.setItem('gameMode',isHard?'hard':'normal');}else{showErrorAlert(HARD_MODE_ALERT_MESSAGE);}};var handleHighContrastMode=function handleHighContrastMode(isHighContrast){setIsHighContrastMode(isHighContrast);setStoredIsHighContrastMode(isHighContrast);};var clearCurrentRowClass=function clearCurrentRowClass(){setCurrentRowClass('');};useEffect(function(){saveGameStateToLocalStorage({guesses:guesses,solution:solution});},[guesses]);useEffect(function(){if(isGameWon){var winMessage=WIN_MESSAGES[Math.floor(Math.random()*WIN_MESSAGES.length)];var delayMs=REVEAL_TIME_MS*solution.length;showSuccessAlert(winMessage,{delayMs:delayMs,onClose:function onClose(){return setIsStatsModalOpen(true);}});}if(isGameLost){setTimeout(function(){setIsStatsModalOpen(true);},(solution.length+1)*REVEAL_TIME_MS);}},[isGameWon,isGameLost,showSuccessAlert]);var onChar=function onChar(value){if(unicodeLength(\"\".concat(currentGuess).concat(value))<=solution.length&&guesses.length<MAX_CHALLENGES&&!isGameWon){setCurrentGuess(\"\".concat(currentGuess).concat(value));}};var onDelete=function onDelete(){setCurrentGuess(new GraphemeSplitter().splitGraphemes(currentGuess).slice(0,-1).join(''));};var onEnter=function onEnter(){if(isGameWon||isGameLost){return;}if(!(unicodeLength(currentGuess)===solution.length)){setCurrentRowClass('jiggle');return showErrorAlert(NOT_ENOUGH_LETTERS_MESSAGE,{onClose:clearCurrentRowClass});}if(!isWordInWordList(currentGuess)){setCurrentRowClass('jiggle');return showErrorAlert(WORD_NOT_FOUND_MESSAGE,{onClose:clearCurrentRowClass});}// enforce hard mode - all guesses must contain all previously revealed letters\nif(isHardMode){var firstMissingReveal=findFirstUnusedReveal(currentGuess,guesses);if(firstMissingReveal){setCurrentRowClass('jiggle');return showErrorAlert(firstMissingReveal,{onClose:clearCurrentRowClass});}}setIsRevealing(true);// turn this back off after all\n// chars have been revealed\nsetTimeout(function(){setIsRevealing(false);},REVEAL_TIME_MS*solution.length);var winningWord=isWinningWord(currentGuess);if(unicodeLength(currentGuess)===solution.length&&guesses.length<MAX_CHALLENGES&&!isGameWon){setGuesses([].concat(_toConsumableArray(guesses),[currentGuess]));setCurrentGuess('');if(winningWord){setStats(addStatsForCompletedGame(stats,guesses.length));return setIsGameWon(true);}if(guesses.length===MAX_CHALLENGES-1){setStats(addStatsForCompletedGame(stats,guesses.length+1));setIsGameLost(true);showErrorAlert(CORRECT_WORD_MESSAGE(solution),{persist:true,delayMs:REVEAL_TIME_MS*solution.length+1});}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"h-screen flex flex-col\",children:[/*#__PURE__*/_jsx(Navbar,{setIsInfoModalOpen:setIsInfoModalOpen,setIsStatsModalOpen:setIsStatsModalOpen,setIsSettingsModalOpen:setIsSettingsModalOpen}),/*#__PURE__*/_jsxs(\"div\",{className:\"pt-2 px-1 pb-8 md:max-w-7xl w-full mx-auto sm:px-6 lg:px-8 flex flex-col grow\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"pb-6 grow\",children:/*#__PURE__*/_jsx(Grid,{solution:solution,guesses:guesses,currentGuess:currentGuess,isRevealing:isRevealing,currentRowClassName:currentRowClass})}),/*#__PURE__*/_jsx(Keyboard,{onChar:onChar,onDelete:onDelete,onEnter:onEnter,solution:solution,guesses:guesses,isRevealing:isRevealing}),/*#__PURE__*/_jsx(InfoModal,{isOpen:isInfoModalOpen,handleClose:function handleClose(){return setIsInfoModalOpen(false);}}),/*#__PURE__*/_jsx(StatsModal,{isOpen:isStatsModalOpen,handleClose:function handleClose(){return setIsStatsModalOpen(false);},solution:solution,guesses:guesses,gameStats:stats,isGameLost:isGameLost,isGameWon:isGameWon,handleShareToClipboard:function handleShareToClipboard(){return showSuccessAlert(GAME_COPIED_MESSAGE);},isHardMode:isHardMode,isDarkMode:isDarkMode,isHighContrastMode:isHighContrastMode,numberOfGuessesMade:guesses.length}),/*#__PURE__*/_jsx(SettingsModal,{isOpen:isSettingsModalOpen,handleClose:function handleClose(){return setIsSettingsModalOpen(false);},isHardMode:isHardMode,handleHardMode:handleHardMode,isDarkMode:isDarkMode,handleDarkMode:handleDarkMode,isHighContrastMode:isHighContrastMode,handleHighContrastMode:handleHighContrastMode}),/*#__PURE__*/_jsx(AlertContainer,{})]})]});}export default App;","map":{"version":3,"sources":["/Users/ntwrkman/Desktop/frcwordl/src/App.tsx"],"names":["useState","useEffect","Grid","Keyboard","InfoModal","StatsModal","SettingsModal","WIN_MESSAGES","GAME_COPIED_MESSAGE","NOT_ENOUGH_LETTERS_MESSAGE","WORD_NOT_FOUND_MESSAGE","CORRECT_WORD_MESSAGE","HARD_MODE_ALERT_MESSAGE","DISCOURAGE_INAPP_BROWSER_TEXT","MAX_CHALLENGES","REVEAL_TIME_MS","WELCOME_INFO_MODAL_MS","DISCOURAGE_INAPP_BROWSERS","isWordInWordList","isWinningWord","solution","findFirstUnusedReveal","unicodeLength","addStatsForCompletedGame","loadStats","loadGameStateFromLocalStorage","saveGameStateToLocalStorage","setStoredIsHighContrastMode","getStoredIsHighContrastMode","default","GraphemeSplitter","AlertContainer","useAlert","Navbar","isInAppBrowser","App","prefersDarkMode","window","matchMedia","matches","showErrorAlert","showError","showSuccessAlert","showSuccess","currentGuess","setCurrentGuess","isGameWon","setIsGameWon","isInfoModalOpen","setIsInfoModalOpen","isStatsModalOpen","setIsStatsModalOpen","isSettingsModalOpen","setIsSettingsModalOpen","currentRowClass","setCurrentRowClass","isGameLost","setIsGameLost","localStorage","getItem","isDarkMode","setIsDarkMode","isHighContrastMode","setIsHighContrastMode","isRevealing","setIsRevealing","loaded","gameWasWon","guesses","includes","length","persist","setGuesses","stats","setStats","isHardMode","setIsHardMode","setTimeout","durationMs","document","documentElement","classList","add","remove","handleDarkMode","isDark","setItem","handleHardMode","isHard","handleHighContrastMode","isHighContrast","clearCurrentRowClass","winMessage","Math","floor","random","delayMs","onClose","onChar","value","onDelete","splitGraphemes","slice","join","onEnter","firstMissingReveal","winningWord"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { Grid } from './components/grid/Grid'\nimport { Keyboard } from './components/keyboard/Keyboard'\nimport { InfoModal } from './components/modals/InfoModal'\nimport { StatsModal } from './components/modals/StatsModal'\nimport { SettingsModal } from './components/modals/SettingsModal'\nimport {\n  WIN_MESSAGES,\n  GAME_COPIED_MESSAGE,\n  NOT_ENOUGH_LETTERS_MESSAGE,\n  WORD_NOT_FOUND_MESSAGE,\n  CORRECT_WORD_MESSAGE,\n  HARD_MODE_ALERT_MESSAGE,\n  DISCOURAGE_INAPP_BROWSER_TEXT,\n} from './constants/strings'\nimport {\n  MAX_CHALLENGES,\n  REVEAL_TIME_MS,\n  WELCOME_INFO_MODAL_MS,\n  DISCOURAGE_INAPP_BROWSERS,\n} from './constants/settings'\nimport {\n  isWordInWordList,\n  isWinningWord,\n  solution,\n  findFirstUnusedReveal,\n  unicodeLength,\n} from './lib/words'\nimport { addStatsForCompletedGame, loadStats } from './lib/stats'\nimport {\n  loadGameStateFromLocalStorage,\n  saveGameStateToLocalStorage,\n  setStoredIsHighContrastMode,\n  getStoredIsHighContrastMode,\n} from './lib/localStorage'\nimport { default as GraphemeSplitter } from 'grapheme-splitter'\n\nimport './App.css'\nimport { AlertContainer } from './components/alerts/AlertContainer'\nimport { useAlert } from './context/AlertContext'\nimport { Navbar } from './components/navbar/Navbar'\nimport { isInAppBrowser } from './lib/browser'\n\nfunction App() {\n  const prefersDarkMode = window.matchMedia(\n    '(prefers-color-scheme: dark)'\n  ).matches\n\n  const { showError: showErrorAlert, showSuccess: showSuccessAlert } =\n    useAlert()\n  const [currentGuess, setCurrentGuess] = useState('')\n  const [isGameWon, setIsGameWon] = useState(false)\n  const [isInfoModalOpen, setIsInfoModalOpen] = useState(false)\n  const [isStatsModalOpen, setIsStatsModalOpen] = useState(false)\n  const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false)\n  const [currentRowClass, setCurrentRowClass] = useState('')\n  const [isGameLost, setIsGameLost] = useState(false)\n  const [isDarkMode, setIsDarkMode] = useState(\n    localStorage.getItem('theme')\n      ? localStorage.getItem('theme') === 'dark'\n      : prefersDarkMode\n      ? true\n      : false\n  )\n  const [isHighContrastMode, setIsHighContrastMode] = useState(\n    getStoredIsHighContrastMode()\n  )\n  const [isRevealing, setIsRevealing] = useState(false)\n  const [guesses, setGuesses] = useState<string[]>(() => {\n    const loaded = loadGameStateFromLocalStorage()\n    if (loaded?.solution !== solution) {\n      return []\n    }\n    const gameWasWon = loaded.guesses.includes(solution)\n    if (gameWasWon) {\n      setIsGameWon(true)\n    }\n    if (loaded.guesses.length === MAX_CHALLENGES && !gameWasWon) {\n      setIsGameLost(true)\n      showErrorAlert(CORRECT_WORD_MESSAGE(solution), {\n        persist: true,\n      })\n    }\n    return loaded.guesses\n  })\n\n  const [stats, setStats] = useState(() => loadStats())\n\n  const [isHardMode, setIsHardMode] = useState(\n    localStorage.getItem('gameMode')\n      ? localStorage.getItem('gameMode') === 'hard'\n      : false\n  )\n\n  useEffect(() => {\n    // if no game state on load,\n    // show the user the how-to info modal\n    if (!loadGameStateFromLocalStorage()) {\n      setTimeout(() => {\n        setIsInfoModalOpen(true)\n      }, WELCOME_INFO_MODAL_MS)\n    }\n  })\n\n  useEffect(() => {\n    DISCOURAGE_INAPP_BROWSERS &&\n      isInAppBrowser() &&\n      showErrorAlert(DISCOURAGE_INAPP_BROWSER_TEXT, {\n        persist: false,\n        durationMs: 7000,\n      })\n  }, [showErrorAlert])\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark')\n    } else {\n      document.documentElement.classList.remove('dark')\n    }\n\n    if (isHighContrastMode) {\n      document.documentElement.classList.add('high-contrast')\n    } else {\n      document.documentElement.classList.remove('high-contrast')\n    }\n  }, [isDarkMode, isHighContrastMode])\n\n  const handleDarkMode = (isDark: boolean) => {\n    setIsDarkMode(isDark)\n    localStorage.setItem('theme', isDark ? 'dark' : 'light')\n  }\n\n  const handleHardMode = (isHard: boolean) => {\n    if (guesses.length === 0 || localStorage.getItem('gameMode') === 'hard') {\n      setIsHardMode(isHard)\n      localStorage.setItem('gameMode', isHard ? 'hard' : 'normal')\n    } else {\n      showErrorAlert(HARD_MODE_ALERT_MESSAGE)\n    }\n  }\n\n  const handleHighContrastMode = (isHighContrast: boolean) => {\n    setIsHighContrastMode(isHighContrast)\n    setStoredIsHighContrastMode(isHighContrast)\n  }\n\n  const clearCurrentRowClass = () => {\n    setCurrentRowClass('')\n  }\n\n  useEffect(() => {\n    saveGameStateToLocalStorage({ guesses, solution })\n  }, [guesses])\n\n  useEffect(() => {\n    if (isGameWon) {\n      const winMessage =\n        WIN_MESSAGES[Math.floor(Math.random() * WIN_MESSAGES.length)]\n      const delayMs = REVEAL_TIME_MS * solution.length\n\n      showSuccessAlert(winMessage, {\n        delayMs,\n        onClose: () => setIsStatsModalOpen(true),\n      })\n    }\n\n    if (isGameLost) {\n      setTimeout(() => {\n        setIsStatsModalOpen(true)\n      }, (solution.length + 1) * REVEAL_TIME_MS)\n    }\n  }, [isGameWon, isGameLost, showSuccessAlert])\n\n  const onChar = (value: string) => {\n    if (\n      unicodeLength(`${currentGuess}${value}`) <= solution.length &&\n      guesses.length < MAX_CHALLENGES &&\n      !isGameWon\n    ) {\n      setCurrentGuess(`${currentGuess}${value}`)\n    }\n  }\n\n  const onDelete = () => {\n    setCurrentGuess(\n      new GraphemeSplitter().splitGraphemes(currentGuess).slice(0, -1).join('')\n    )\n  }\n\n  const onEnter = () => {\n    if (isGameWon || isGameLost) {\n      return\n    }\n\n    if (!(unicodeLength(currentGuess) === solution.length)) {\n      setCurrentRowClass('jiggle')\n      return showErrorAlert(NOT_ENOUGH_LETTERS_MESSAGE, {\n        onClose: clearCurrentRowClass,\n      })\n    }\n\n    if (!isWordInWordList(currentGuess)) {\n      setCurrentRowClass('jiggle')\n      return showErrorAlert(WORD_NOT_FOUND_MESSAGE, {\n        onClose: clearCurrentRowClass,\n      })\n    }\n\n    // enforce hard mode - all guesses must contain all previously revealed letters\n    if (isHardMode) {\n      const firstMissingReveal = findFirstUnusedReveal(currentGuess, guesses)\n      if (firstMissingReveal) {\n        setCurrentRowClass('jiggle')\n        return showErrorAlert(firstMissingReveal, {\n          onClose: clearCurrentRowClass,\n        })\n      }\n    }\n\n    setIsRevealing(true)\n    // turn this back off after all\n    // chars have been revealed\n    setTimeout(() => {\n      setIsRevealing(false)\n    }, REVEAL_TIME_MS * solution.length)\n\n    const winningWord = isWinningWord(currentGuess)\n\n    if (\n      unicodeLength(currentGuess) === solution.length &&\n      guesses.length < MAX_CHALLENGES &&\n      !isGameWon\n    ) {\n      setGuesses([...guesses, currentGuess])\n      setCurrentGuess('')\n\n      if (winningWord) {\n        setStats(addStatsForCompletedGame(stats, guesses.length))\n        return setIsGameWon(true)\n      }\n\n      if (guesses.length === MAX_CHALLENGES - 1) {\n        setStats(addStatsForCompletedGame(stats, guesses.length + 1))\n        setIsGameLost(true)\n        showErrorAlert(CORRECT_WORD_MESSAGE(solution), {\n          persist: true,\n          delayMs: REVEAL_TIME_MS * solution.length + 1,\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"h-screen flex flex-col\">\n      <Navbar\n        setIsInfoModalOpen={setIsInfoModalOpen}\n        setIsStatsModalOpen={setIsStatsModalOpen}\n        setIsSettingsModalOpen={setIsSettingsModalOpen}\n      />\n      <div className=\"pt-2 px-1 pb-8 md:max-w-7xl w-full mx-auto sm:px-6 lg:px-8 flex flex-col grow\">\n        <div className=\"pb-6 grow\">\n          <Grid\n            solution={solution}\n            guesses={guesses}\n            currentGuess={currentGuess}\n            isRevealing={isRevealing}\n            currentRowClassName={currentRowClass}\n          />\n        </div>\n        <Keyboard\n          onChar={onChar}\n          onDelete={onDelete}\n          onEnter={onEnter}\n          solution={solution}\n          guesses={guesses}\n          isRevealing={isRevealing}\n        />\n        <InfoModal\n          isOpen={isInfoModalOpen}\n          handleClose={() => setIsInfoModalOpen(false)}\n        />\n        <StatsModal\n          isOpen={isStatsModalOpen}\n          handleClose={() => setIsStatsModalOpen(false)}\n          solution={solution}\n          guesses={guesses}\n          gameStats={stats}\n          isGameLost={isGameLost}\n          isGameWon={isGameWon}\n          handleShareToClipboard={() => showSuccessAlert(GAME_COPIED_MESSAGE)}\n          isHardMode={isHardMode}\n          isDarkMode={isDarkMode}\n          isHighContrastMode={isHighContrastMode}\n          numberOfGuessesMade={guesses.length}\n        />\n        <SettingsModal\n          isOpen={isSettingsModalOpen}\n          handleClose={() => setIsSettingsModalOpen(false)}\n          isHardMode={isHardMode}\n          handleHardMode={handleHardMode}\n          isDarkMode={isDarkMode}\n          handleDarkMode={handleDarkMode}\n          isHighContrastMode={isHighContrastMode}\n          handleHighContrastMode={handleHighContrastMode}\n        />\n        <AlertContainer />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}