{"ast":null,"code":"import { isDate, isEmptyObject, isObject, hasOwnProperty } from './utils.js';\n\nconst diff = (lhs, rhs) => {\n  if (lhs === rhs) return {}; // equal return no diff\n\n  if (!isObject(lhs) || !isObject(rhs)) return rhs; // return updated rhs\n\n  const l = lhs;\n  const r = rhs;\n  const deletedValues = Object.keys(l).reduce((acc, key) => {\n    if (!hasOwnProperty(r, key)) {\n      acc[key] = undefined;\n    }\n\n    return acc;\n  }, {});\n\n  if (isDate(l) || isDate(r)) {\n    if (l.valueOf() == r.valueOf()) return {};\n    return r;\n  }\n\n  return Object.keys(r).reduce((acc, key) => {\n    if (!hasOwnProperty(l, key)) {\n      acc[key] = r[key]; // return added r key\n\n      return acc;\n    }\n\n    const difference = diff(l[key], r[key]); // If the difference is empty, and the lhs is an empty object or the rhs is not an empty object\n\n    if (isEmptyObject(difference) && !isDate(difference) && (isEmptyObject(l[key]) || !isEmptyObject(r[key]))) return acc; // return no diff\n\n    acc[key] = difference; // return updated key\n\n    return acc; // return updated key\n  }, deletedValues);\n};\n\nexport default diff;","map":{"version":3,"sources":["/Users/ntwrkman/Desktop/frcwordl/node_modules/deep-object-diff/mjs/diff.js"],"names":["isDate","isEmptyObject","isObject","hasOwnProperty","diff","lhs","rhs","l","r","deletedValues","Object","keys","reduce","acc","key","undefined","valueOf","difference"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,aAAjB,EAAgCC,QAAhC,EAA0CC,cAA1C,QAAgE,YAAhE;;AAEA,MAAMC,IAAI,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzB,MAAID,GAAG,KAAKC,GAAZ,EAAiB,OAAO,EAAP,CADQ,CACG;;AAE5B,MAAI,CAACJ,QAAQ,CAACG,GAAD,CAAT,IAAkB,CAACH,QAAQ,CAACI,GAAD,CAA/B,EAAsC,OAAOA,GAAP,CAHb,CAGyB;;AAElD,QAAMC,CAAC,GAAGF,GAAV;AACA,QAAMG,CAAC,GAAGF,GAAV;AAEA,QAAMG,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYJ,CAAZ,EAAeK,MAAf,CAAsB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACxD,QAAI,CAACX,cAAc,CAACK,CAAD,EAAIM,GAAJ,CAAnB,EAA6B;AAC3BD,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,SAAX;AAED;;AAED,WAAOF,GAAP;AACD,GAPqB,EAOnB,EAPmB,CAAtB;;AASA,MAAIb,MAAM,CAACO,CAAD,CAAN,IAAaP,MAAM,CAACQ,CAAD,CAAvB,EAA4B;AAC1B,QAAID,CAAC,CAACS,OAAF,MAAeR,CAAC,CAACQ,OAAF,EAAnB,EAAgC,OAAO,EAAP;AAChC,WAAOR,CAAP;AACD;;AAED,SAAOE,MAAM,CAACC,IAAP,CAAYH,CAAZ,EAAeI,MAAf,CAAsB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzC,QAAI,CAACX,cAAc,CAACI,CAAD,EAAIO,GAAJ,CAAnB,EAA4B;AAC1BD,MAAAA,GAAG,CAACC,GAAD,CAAH,GAAWN,CAAC,CAACM,GAAD,CAAZ,CAD0B,CACP;;AACnB,aAAOD,GAAP;AACD;;AAED,UAAMI,UAAU,GAAGb,IAAI,CAACG,CAAC,CAACO,GAAD,CAAF,EAASN,CAAC,CAACM,GAAD,CAAV,CAAvB,CANyC,CAQzC;;AACA,QAAIb,aAAa,CAACgB,UAAD,CAAb,IAA6B,CAACjB,MAAM,CAACiB,UAAD,CAApC,KAAqDhB,aAAa,CAACM,CAAC,CAACO,GAAD,CAAF,CAAb,IAAyB,CAACb,aAAa,CAACO,CAAC,CAACM,GAAD,CAAF,CAA5F,CAAJ,EACE,OAAOD,GAAP,CAVuC,CAU3B;;AAEdA,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWG,UAAX,CAZyC,CAYnB;;AACtB,WAAOJ,GAAP,CAbyC,CAa7B;AACb,GAdM,EAcJJ,aAdI,CAAP;AAeD,CArCD;;AAuCA,eAAeL,IAAf","sourcesContent":["import { isDate, isEmptyObject, isObject, hasOwnProperty } from './utils.js';\n\nconst diff = (lhs, rhs) => {\n  if (lhs === rhs) return {}; // equal return no diff\n\n  if (!isObject(lhs) || !isObject(rhs)) return rhs; // return updated rhs\n\n  const l = lhs;\n  const r = rhs;\n\n  const deletedValues = Object.keys(l).reduce((acc, key) => {\n    if (!hasOwnProperty(r, key)) {\n      acc[key] = undefined;\n      \n    }\n\n    return acc;\n  }, {});\n\n  if (isDate(l) || isDate(r)) {\n    if (l.valueOf() == r.valueOf()) return {};\n    return r;\n  }\n\n  return Object.keys(r).reduce((acc, key) => {\n    if (!hasOwnProperty(l, key)){\n      acc[key] = r[key]; // return added r key\n      return acc;\n    } \n\n    const difference = diff(l[key], r[key]);\n\n    // If the difference is empty, and the lhs is an empty object or the rhs is not an empty object\n    if (isEmptyObject(difference) && !isDate(difference) && (isEmptyObject(l[key]) || !isEmptyObject(r[key])))\n      return acc; // return no diff\n\n    acc[key] = difference // return updated key\n    return acc; // return updated key\n  }, deletedValues);\n};\n\nexport default diff;\n"]},"metadata":{},"sourceType":"module"}