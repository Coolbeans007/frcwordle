{"ast":null,"code":"var _jsxFileName = \"/Users/ntwrkman/Desktop/react-wordle/src/components/keyboard/Keyboard.tsx\",\n    _s = $RefreshSig$();\n\nimport { getStatuses } from '../../lib/statuses';\nimport { Key } from './Key';\nimport { useEffect } from 'react';\nimport { ORTHOGRAPHY } from '../../constants/orthography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Keyboard = _ref => {\n  _s();\n\n  let {\n    onChar,\n    onDelete,\n    onEnter,\n    guesses\n  } = _ref;\n  const charStatuses = getStatuses(guesses);\n\n  const onClick = value => {\n    if (value === 'ENTER') {\n      onEnter();\n    } else if (value === 'DELETE') {\n      onDelete();\n    } else {\n      onChar(value);\n    }\n  };\n\n  useEffect(() => {\n    const listener = e => {\n      if (e.code === 'Enter') {\n        onEnter();\n      } else if (e.code === 'Backspace') {\n        onDelete();\n      } // Take away key event listener for now\n      else {\n        const key = e.key.toUpperCase();\n\n        if (key.length === 1 && key >= '!' && key <= '9') {\n          onChar(key);\n        }\n      }\n    };\n\n    window.addEventListener('keyup', listener);\n    return () => {\n      window.removeEventListener('keyup', listener);\n    };\n  }, [onEnter, onDelete, onChar]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mb-1\",\n      children: ORTHOGRAPHY.slice(0, Math.floor(ORTHOGRAPHY.length * 0.75)).map(char => /*#__PURE__*/_jsxDEV(Key, {\n        value: char,\n        onClick: onClick,\n        status: charStatuses[char]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(Key, {\n        width: 65.4,\n        value: \"ENTER\",\n        onClick: onClick,\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), ORTHOGRAPHY.slice(Math.floor(ORTHOGRAPHY.length * 0.75), ORTHOGRAPHY.length).map(char => /*#__PURE__*/_jsxDEV(Key, {\n        value: char,\n        onClick: onClick,\n        status: charStatuses[char]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Key, {\n        width: 65.4,\n        value: \"DELETE\",\n        onClick: onClick,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Keyboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Keyboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"sources":["/Users/ntwrkman/Desktop/react-wordle/src/components/keyboard/Keyboard.tsx"],"names":["getStatuses","Key","useEffect","ORTHOGRAPHY","Keyboard","onChar","onDelete","onEnter","guesses","charStatuses","onClick","value","listener","e","code","key","toUpperCase","length","window","addEventListener","removeEventListener","slice","Math","floor","map","char"],"mappings":"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","sourcesContent":["import { KeyValue } from '../../lib/keyboard'\nimport { getStatuses } from '../../lib/statuses'\nimport { Key } from './Key'\nimport { useEffect } from 'react'\nimport { ORTHOGRAPHY } from '../../constants/orthography'\n\ntype Props = {\n  onChar: (value: string) => void\n  onDelete: () => void\n  onEnter: () => void\n  guesses: string[][]\n}\n\nexport const Keyboard = ({ onChar, onDelete, onEnter, guesses }: Props) => {\n  const charStatuses = getStatuses(guesses)\n\n  const onClick = (value: KeyValue) => {\n    if (value === 'ENTER') {\n      onEnter()\n    } else if (value === 'DELETE') {\n      onDelete()\n    } else {\n      onChar(value)\n    }\n  }\n\n  useEffect(() => {\n    const listener = (e: KeyboardEvent) => {\n      if (e.code === 'Enter') {\n        onEnter()\n      } else if (e.code === 'Backspace') {\n        onDelete()\n      }\n      // Take away key event listener for now\n      else {\n         const key = e.key.toUpperCase()\n         if (key.length === 1 && key >= '!' && key <= '9') {\n           onChar(key)\n         }\n       }\n    }\n    window.addEventListener('keyup', listener)\n    return () => {\n      window.removeEventListener('keyup', listener)\n    }\n  }, [onEnter, onDelete, onChar])\n\n  return (\n    <div className=\"mb-3\">\n      <div className=\"flex justify-center mb-1\">\n        {ORTHOGRAPHY.slice(0, Math.floor(ORTHOGRAPHY.length * 0.75)).map(\n          (char) => (\n            <Key value={char} onClick={onClick} status={charStatuses[char]} />\n          )\n        )}\n      </div>\n      <div className=\"flex justify-center\">\n        <Key width={65.4} value=\"ENTER\" onClick={onClick}>\n          Enter\n        </Key>\n        {ORTHOGRAPHY.slice(\n          Math.floor(ORTHOGRAPHY.length * 0.75),\n          ORTHOGRAPHY.length\n        ).map((char) => (\n          <Key value={char} onClick={onClick} status={charStatuses[char]} />\n        ))}\n        <Key width={65.4} value=\"DELETE\" onClick={onClick}>\n          Delete\n        </Key>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}