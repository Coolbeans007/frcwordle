{"ast":null,"code":"var _jsxFileName = \"/Users/ntwrkman/Desktop/react-wordle/src/components/stats/Histogram.tsx\";\nimport { Progress } from './Progress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isCurrentDayStatRow = (isGameWon, numberOfGuessesMade, i) => {\n  return isGameWon && numberOfGuessesMade === i + 1;\n};\n\nexport const Histogram = _ref => {\n  let {\n    gameStats,\n    isGameWon,\n    numberOfGuessesMade\n  } = _ref;\n  const winDistribution = gameStats.winDistribution;\n  const maxValue = Math.max(...winDistribution, 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"columns-1 justify-left m-2 text-sm dark:text-white\",\n    children: winDistribution.map((value, i) => /*#__PURE__*/_jsxDEV(Progress, {\n      index: i,\n      isCurrentDayStatRow: isCurrentDayStatRow(isGameWon, numberOfGuessesMade, i),\n      size: 90 * (value / maxValue),\n      label: String(value)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = Histogram;\n\nvar _c;\n\n$RefreshReg$(_c, \"Histogram\");","map":{"version":3,"sources":["/Users/ntwrkman/Desktop/react-wordle/src/components/stats/Histogram.tsx"],"names":["Progress","isCurrentDayStatRow","isGameWon","numberOfGuessesMade","i","Histogram","gameStats","winDistribution","maxValue","Math","max","map","value","String"],"mappings":";AACA,SAASA,QAAT,QAAyB,YAAzB;;;AAQA,MAAMC,mBAAmB,GAAG,CAC1BC,SAD0B,EAE1BC,mBAF0B,EAG1BC,CAH0B,KAIvB;AACH,SAAOF,SAAS,IAAIC,mBAAmB,KAAKC,CAAC,GAAG,CAAhD;AACD,CAND;;AAQA,OAAO,MAAMC,SAAS,GAAG,QAIZ;AAAA,MAJa;AACxBC,IAAAA,SADwB;AAExBJ,IAAAA,SAFwB;AAGxBC,IAAAA;AAHwB,GAIb;AACX,QAAMI,eAAe,GAAGD,SAAS,CAACC,eAAlC;AACA,QAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGH,eAAZ,EAA6B,CAA7B,CAAjB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,oDAAf;AAAA,cACGA,eAAe,CAACI,GAAhB,CAAoB,CAACC,KAAD,EAAQR,CAAR,kBACnB,QAAC,QAAD;AAEE,MAAA,KAAK,EAAEA,CAFT;AAGE,MAAA,mBAAmB,EAAEH,mBAAmB,CACtCC,SADsC,EAEtCC,mBAFsC,EAGtCC,CAHsC,CAH1C;AAQE,MAAA,IAAI,EAAE,MAAMQ,KAAK,GAAGJ,QAAd,CARR;AASE,MAAA,KAAK,EAAEK,MAAM,CAACD,KAAD;AATf,OACOR,CADP;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzBM;KAAMC,S","sourcesContent":["import { GameStats } from '../../lib/localStorage'\nimport { Progress } from './Progress'\n\ntype Props = {\n  gameStats: GameStats\n  isGameWon: boolean\n  numberOfGuessesMade: number\n}\n\nconst isCurrentDayStatRow = (\n  isGameWon: boolean,\n  numberOfGuessesMade: number,\n  i: number\n) => {\n  return isGameWon && numberOfGuessesMade === i + 1\n}\n\nexport const Histogram = ({\n  gameStats,\n  isGameWon,\n  numberOfGuessesMade,\n}: Props) => {\n  const winDistribution = gameStats.winDistribution\n  const maxValue = Math.max(...winDistribution, 1)\n\n  return (\n    <div className=\"columns-1 justify-left m-2 text-sm dark:text-white\">\n      {winDistribution.map((value, i) => (\n        <Progress\n          key={i}\n          index={i}\n          isCurrentDayStatRow={isCurrentDayStatRow(\n            isGameWon,\n            numberOfGuessesMade,\n            i\n          )}\n          size={90 * (value / maxValue)}\n          label={String(value)}\n        />\n      ))}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}