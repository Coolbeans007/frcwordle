{"ast":null,"code":"import _slicedToArray from\"/Users/ntwrkman/Desktop/react-wordle/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useCallback,useContext,useState}from'react';import{ALERT_TIME_MS}from'../constants/settings';import{jsx as _jsx}from\"react/jsx-runtime\";export var AlertContext=/*#__PURE__*/createContext({status:'success',message:null,isVisible:false,showSuccess:function showSuccess(){return null;},showError:function showError(){return null;}});AlertContext.displayName='AlertContext';export var useAlert=function useAlert(){return useContext(AlertContext);};export var AlertProvider=function AlertProvider(_ref){var children=_ref.children;var _useState=useState('success'),_useState2=_slicedToArray(_useState,2),status=_useState2[0],setStatus=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],setMessage=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isVisible=_useState6[0],setIsVisible=_useState6[1];var show=useCallback(function(showStatus,newMessage,options){var _ref2=options||{},_ref2$delayMs=_ref2.delayMs,delayMs=_ref2$delayMs===void 0?0:_ref2$delayMs,persist=_ref2.persist,onClose=_ref2.onClose,_ref2$durationMs=_ref2.durationMs,durationMs=_ref2$durationMs===void 0?ALERT_TIME_MS:_ref2$durationMs;setTimeout(function(){setStatus(showStatus);setMessage(newMessage);setIsVisible(true);if(!persist){setTimeout(function(){setIsVisible(false);if(onClose){onClose();}},durationMs);}},delayMs);},[setStatus,setMessage,setIsVisible]);var showError=useCallback(function(newMessage,options){show('error',newMessage,options);},[show]);var showSuccess=useCallback(function(newMessage,options){show('success',newMessage,options);},[show]);return/*#__PURE__*/_jsx(AlertContext.Provider,{value:{status:status,message:message,isVisible:isVisible,showError:showError,showSuccess:showSuccess},children:children});};","map":{"version":3,"sources":["/Users/ntwrkman/Desktop/react-wordle/src/context/AlertContext.tsx"],"names":["createContext","useCallback","useContext","useState","ALERT_TIME_MS","AlertContext","status","message","isVisible","showSuccess","showError","displayName","useAlert","AlertProvider","children","setStatus","setMessage","setIsVisible","show","showStatus","newMessage","options","delayMs","persist","onClose","durationMs","setTimeout"],"mappings":"0HAAA,OACEA,aADF,CAGEC,WAHF,CAIEC,UAJF,CAKEC,QALF,KAMO,OANP,CAOA,OAASC,aAAT,KAA8B,uBAA9B,C,2CAmBA,MAAO,IAAMC,CAAAA,YAAY,cAAGL,aAAa,CAA2B,CAClEM,MAAM,CAAE,SAD0D,CAElEC,OAAO,CAAE,IAFyD,CAGlEC,SAAS,CAAE,KAHuD,CAIlEC,WAAW,CAAE,6BAAM,KAAN,EAJqD,CAKlEC,SAAS,CAAE,2BAAM,KAAN,EALuD,CAA3B,CAAlC,CAOPL,YAAY,CAACM,WAAb,CAA2B,cAA3B,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAMV,CAAAA,UAAU,CAACG,YAAD,CAAhB,EAAjB,CAMP,MAAO,IAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAyB,IAAtBC,CAAAA,QAAsB,MAAtBA,QAAsB,CACpD,cAA4BX,QAAQ,CAAc,SAAd,CAApC,wCAAOG,MAAP,eAAeS,SAAf,eACA,eAA8BZ,QAAQ,CAAgB,IAAhB,CAAtC,yCAAOI,OAAP,eAAgBS,UAAhB,eACA,eAAkCb,QAAQ,CAAC,KAAD,CAA1C,yCAAOK,SAAP,eAAkBS,YAAlB,eAEA,GAAMC,CAAAA,IAAI,CAAGjB,WAAW,CACtB,SAACkB,UAAD,CAA0BC,UAA1B,CAA8CC,OAA9C,CAAwE,CACtE,UAKIA,OAAO,EAAI,EALf,qBACEC,OADF,CACEA,OADF,wBACY,CADZ,eAEEC,OAFF,OAEEA,OAFF,CAGEC,OAHF,OAGEA,OAHF,wBAIEC,UAJF,CAIEA,UAJF,2BAIerB,aAJf,kBAOAsB,UAAU,CAAC,UAAM,CACfX,SAAS,CAACI,UAAD,CAAT,CACAH,UAAU,CAACI,UAAD,CAAV,CACAH,YAAY,CAAC,IAAD,CAAZ,CAEA,GAAI,CAACM,OAAL,CAAc,CACZG,UAAU,CAAC,UAAM,CACfT,YAAY,CAAC,KAAD,CAAZ,CACA,GAAIO,OAAJ,CAAa,CACXA,OAAO,GACR,CACF,CALS,CAKPC,UALO,CAAV,CAMD,CACF,CAbS,CAaPH,OAbO,CAAV,CAcD,CAvBqB,CAwBtB,CAACP,SAAD,CAAYC,UAAZ,CAAwBC,YAAxB,CAxBsB,CAAxB,CA2BA,GAAMP,CAAAA,SAAS,CAAGT,WAAW,CAC3B,SAACmB,UAAD,CAAqBC,OAArB,CAA+C,CAC7CH,IAAI,CAAC,OAAD,CAAUE,UAAV,CAAsBC,OAAtB,CAAJ,CACD,CAH0B,CAI3B,CAACH,IAAD,CAJ2B,CAA7B,CAOA,GAAMT,CAAAA,WAAW,CAAGR,WAAW,CAC7B,SAACmB,UAAD,CAAqBC,OAArB,CAA+C,CAC7CH,IAAI,CAAC,SAAD,CAAYE,UAAZ,CAAwBC,OAAxB,CAAJ,CACD,CAH4B,CAI7B,CAACH,IAAD,CAJ6B,CAA/B,CAOA,mBACE,KAAC,YAAD,CAAc,QAAd,EACE,KAAK,CAAE,CACLZ,MAAM,CAANA,MADK,CAELC,OAAO,CAAPA,OAFK,CAGLC,SAAS,CAATA,SAHK,CAILE,SAAS,CAATA,SAJK,CAKLD,WAAW,CAAXA,WALK,CADT,UASGK,QATH,EADF,CAaD,CA3DM","sourcesContent":["import {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useState,\n} from 'react'\nimport { ALERT_TIME_MS } from '../constants/settings'\n\ntype AlertStatus = 'success' | 'error' | undefined\n\ntype ShowOptions = {\n  persist?: boolean\n  delayMs?: number\n  durationMs?: number\n  onClose?: () => void\n}\n\ntype AlertContextValue = {\n  status: AlertStatus\n  message: string | null\n  isVisible: boolean\n  showSuccess: (message: string, options?: ShowOptions) => void\n  showError: (message: string, options?: ShowOptions) => void\n}\n\nexport const AlertContext = createContext<AlertContextValue | null>({\n  status: 'success',\n  message: null,\n  isVisible: false,\n  showSuccess: () => null,\n  showError: () => null,\n})\nAlertContext.displayName = 'AlertContext'\n\nexport const useAlert = () => useContext(AlertContext) as AlertContextValue\n\ntype Props = {\n  children?: ReactNode\n}\n\nexport const AlertProvider = ({ children }: Props) => {\n  const [status, setStatus] = useState<AlertStatus>('success')\n  const [message, setMessage] = useState<string | null>(null)\n  const [isVisible, setIsVisible] = useState(false)\n\n  const show = useCallback(\n    (showStatus: AlertStatus, newMessage: string, options?: ShowOptions) => {\n      const {\n        delayMs = 0,\n        persist,\n        onClose,\n        durationMs = ALERT_TIME_MS,\n      } = options || {}\n\n      setTimeout(() => {\n        setStatus(showStatus)\n        setMessage(newMessage)\n        setIsVisible(true)\n\n        if (!persist) {\n          setTimeout(() => {\n            setIsVisible(false)\n            if (onClose) {\n              onClose()\n            }\n          }, durationMs)\n        }\n      }, delayMs)\n    },\n    [setStatus, setMessage, setIsVisible]\n  )\n\n  const showError = useCallback(\n    (newMessage: string, options?: ShowOptions) => {\n      show('error', newMessage, options)\n    },\n    [show]\n  )\n\n  const showSuccess = useCallback(\n    (newMessage: string, options?: ShowOptions) => {\n      show('success', newMessage, options)\n    },\n    [show]\n  )\n\n  return (\n    <AlertContext.Provider\n      value={{\n        status,\n        message,\n        isVisible,\n        showError,\n        showSuccess,\n      }}\n    >\n      {children}\n    </AlertContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}