{"ast":null,"code":"var _jsxFileName = \"/Users/ntwrkman/Desktop/react-wordle/src/components/keyboard/Keyboard.tsx\",\n    _s = $RefreshSig$();\n\nimport { getStatuses } from '../../lib/statuses';\nimport { Key } from './Key';\nimport { useEffect } from 'react';\nimport { ENTER_TEXT, DELETE_TEXT } from '../../constants/strings';\nimport { localeAwareUpperCase } from '../../lib/words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Keyboard = _ref => {\n  _s();\n\n  let {\n    onChar,\n    onDelete,\n    onEnter,\n    solution,\n    guesses,\n    isRevealing\n  } = _ref;\n  const charStatuses = getStatuses(solution, guesses);\n\n  const onClick = value => {\n    if (value === 'ENTER') {\n      onEnter();\n    } else if (value === 'DELETE') {\n      onDelete();\n    } else {\n      onChar(value);\n    }\n  };\n\n  useEffect(() => {\n    const listener = e => {\n      if (e.code === 'Enter') {\n        onEnter();\n      } else if (e.code === 'Backspace') {\n        onDelete();\n      } else {\n        const key = localeAwareUpperCase(e.key); // TODO: check this test if the range works with non-english letters\n\n        if (key.length === 1 && key >= '0' && key <= '9') {\n          onChar(key);\n        }\n      }\n    };\n\n    window.addEventListener('keyup', listener);\n    return () => {\n      window.removeEventListener('keyup', listener);\n    };\n  }, [onEnter, onDelete, onChar]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mb-1\",\n      children: ['1', '2', '3'].map(key => /*#__PURE__*/_jsxDEV(Key, {\n        value: key,\n        width: 60,\n        onClick: onClick,\n        status: charStatuses[key],\n        isRevealing: isRevealing\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mb-1\",\n      children: ['4', '5', '6'].map(key => /*#__PURE__*/_jsxDEV(Key, {\n        value: key,\n        width: 60,\n        onClick: onClick,\n        status: charStatuses[key],\n        isRevealing: isRevealing\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mb-1\",\n      children: ['7', '8', '9'].map(key => /*#__PURE__*/_jsxDEV(Key, {\n        value: key,\n        width: 60,\n        onClick: onClick,\n        status: charStatuses[key],\n        isRevealing: isRevealing\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: [['0'].map(key => /*#__PURE__*/_jsxDEV(Key, {\n        value: key,\n        width: 60,\n        onClick: onClick,\n        status: charStatuses[key],\n        isRevealing: isRevealing\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Key, {\n        width: 60,\n        value: \"DELETE\",\n        onClick: onClick,\n        children: DELETE_TEXT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Key, {\n        width: 60,\n        value: \"ENTER\",\n        onClick: onClick,\n        children: ENTER_TEXT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Key, {\n        width: 60,\n        value: \"Reset\",\n        onClick: onClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Keyboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Keyboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"sources":["/Users/ntwrkman/Desktop/react-wordle/src/components/keyboard/Keyboard.tsx"],"names":["getStatuses","Key","useEffect","ENTER_TEXT","DELETE_TEXT","localeAwareUpperCase","Keyboard","onChar","onDelete","onEnter","solution","guesses","isRevealing","charStatuses","onClick","value","listener","e","code","key","length","window","addEventListener","removeEventListener","map"],"mappings":"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","sourcesContent":["import { getStatuses } from '../../lib/statuses'\nimport { Key } from './Key'\nimport { useEffect } from 'react'\nimport { ENTER_TEXT, DELETE_TEXT } from '../../constants/strings'\nimport { localeAwareUpperCase } from '../../lib/words'\n\ntype Props = {\n  onChar: (value: string) => void\n  onDelete: () => void\n  onEnter: () => void\n  solution: string\n  guesses: string[]\n  isRevealing?: boolean\n}\n\nexport const Keyboard = ({\n  onChar,\n  onDelete,\n  onEnter,\n  solution,\n  guesses,\n  isRevealing,\n}: Props) => {\n  const charStatuses = getStatuses(solution, guesses)\n\n  const onClick = (value: string) => {\n    if (value === 'ENTER') {\n      onEnter()\n    } else if (value === 'DELETE') {\n      onDelete()\n    } else {\n      onChar(value)\n    }\n  }\n\n  useEffect(() => {\n    const listener = (e: KeyboardEvent) => {\n      if (e.code === 'Enter') {\n        onEnter()\n      } else if (e.code === 'Backspace') {\n        onDelete()\n      } else {\n        const key = localeAwareUpperCase(e.key)\n        // TODO: check this test if the range works with non-english letters\n        if (key.length === 1 && key >= '0' && key <= '9') {\n          onChar(key)\n        }\n      }\n    }\n    window.addEventListener('keyup', listener)\n    return () => {\n      window.removeEventListener('keyup', listener)\n    }\n  }, [onEnter, onDelete, onChar])\n\n  return (\n    <div>\n      <div className=\"flex justify-center mb-1\">\n        {['1', '2', '3'].map((key) => (\n          <Key\n            value={key}\n            key={key}\n            width={60}\n            onClick={onClick}\n            status={charStatuses[key]}\n            isRevealing={isRevealing}\n          />\n        ))}\n      </div>\n      <div className=\"flex justify-center mb-1\">\n        {['4', '5', '6'].map((key) => (\n          <Key\n            value={key}\n            key={key}\n            width={60}\n            onClick={onClick}\n            status={charStatuses[key]}\n            isRevealing={isRevealing}\n          />\n        ))}\n      </div>\n      <div className=\"flex justify-center mb-1\">\n        {['7', '8', '9'].map((key) => (\n          <Key\n            value={key}\n            key={key}\n            width={60}\n            onClick={onClick}\n            status={charStatuses[key]}\n            isRevealing={isRevealing}\n          />\n        ))}\n      </div>\n      <div className=\"flex justify-center\">\n        {['0'].map((key) => (\n          <Key\n            value={key}\n            key={key}\n            width={60}\n            onClick={onClick}\n            status={charStatuses[key]}\n            isRevealing={isRevealing}\n          />\n        ))}\n           <Key width={60} value=\"DELETE\" onClick={onClick}>\n          {DELETE_TEXT}\n        </Key>\n        <Key width={60} value=\"ENTER\" onClick={onClick}>\n          {ENTER_TEXT}\n        </Key>\n        <Key width={60} value=\"Reset\" onClick={onClick}>\n        \n        </Key>\n     \n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}