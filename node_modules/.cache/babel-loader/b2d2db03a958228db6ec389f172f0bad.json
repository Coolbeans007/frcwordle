{"ast":null,"code":"import{getStatuses}from'../../lib/statuses';import{Key}from'./Key';import{useEffect}from'react';import{ENTER_TEXT,DELETE_TEXT,RELOAD}from'../../constants/strings';import{localeAwareUpperCase}from'../../lib/words';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Keyboard=function Keyboard(_ref){var onChar=_ref.onChar,onDelete=_ref.onDelete,onEnter=_ref.onEnter,solution=_ref.solution,guesses=_ref.guesses,isRevealing=_ref.isRevealing;var charStatuses=getStatuses(solution,guesses);var onClick=function onClick(value){if(value==='ENTER'){onEnter();}else if(value==='DELETE'){onDelete();}else if(value==='Reset'){window.location.reload();}else{onChar(value);}};useEffect(function(){var listener=function listener(e){if(e.code==='Enter'){onEnter();}else if(e.code==='Backspace'){onDelete();}else{var key=localeAwareUpperCase(e.key);// TODO: check this test if the range works with non-english letters\nif(key.length===1&&key>='0'&&key<='9'){onChar(key);}}};window.addEventListener('keyup',listener);return function(){window.removeEventListener('keyup',listener);};},[onEnter,onDelete,onChar]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center mb-1\",children:['1','2','3'].map(function(key){return/*#__PURE__*/_jsx(Key,{value:key,width:60,onClick:onClick,status:charStatuses[key],isRevealing:isRevealing},key);})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center mb-1\",children:['4','5','6'].map(function(key){return/*#__PURE__*/_jsx(Key,{value:key,width:60,onClick:onClick,status:charStatuses[key],isRevealing:isRevealing},key);})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center mb-1\",children:['7','8','9'].map(function(key){return/*#__PURE__*/_jsx(Key,{value:key,width:60,onClick:onClick,status:charStatuses[key],isRevealing:isRevealing},key);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center\",children:[['0'].map(function(key){return/*#__PURE__*/_jsx(Key,{value:key,width:60,onClick:onClick,status:charStatuses[key],isRevealing:isRevealing},key);}),/*#__PURE__*/_jsx(Key,{width:60,value:\"DELETE\",onClick:onClick,children:DELETE_TEXT}),/*#__PURE__*/_jsx(Key,{width:60,value:\"ENTER\",onClick:onClick,children:ENTER_TEXT}),/*#__PURE__*/_jsx(Key,{width:60,value:\"Reset\",onClick:onClick,children:RELOAD})]})]});};","map":{"version":3,"sources":["/Users/ntwrkman/Desktop/frcwordl/src/components/keyboard/Keyboard.tsx"],"names":["getStatuses","Key","useEffect","ENTER_TEXT","DELETE_TEXT","RELOAD","localeAwareUpperCase","Keyboard","onChar","onDelete","onEnter","solution","guesses","isRevealing","charStatuses","onClick","value","window","location","reload","listener","e","code","key","length","addEventListener","removeEventListener","map"],"mappings":"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","sourcesContent":["import { getStatuses } from '../../lib/statuses'\nimport { Key } from './Key'\nimport { useEffect } from 'react'\nimport { ENTER_TEXT, DELETE_TEXT, RELOAD } from '../../constants/strings'\nimport { localeAwareUpperCase } from '../../lib/words'\n\ntype Props = {\n  onChar: (value: string) => void\n  onDelete: () => void\n  onEnter: () => void\n  solution: string\n  guesses: string[]\n  isRevealing?: boolean\n}\n\nexport const Keyboard = ({\n  onChar,\n  onDelete,\n  onEnter,\n  solution,\n  guesses,\n  isRevealing,\n}: Props) => {\n  const charStatuses = getStatuses(solution, guesses)\n\n  const onClick = (value: string) => {\n    if (value === 'ENTER') {\n      onEnter()\n    } else if (value === 'DELETE') {\n      onDelete()\n    } else if (value === 'Reset') {\n      window.location.reload()\n    } else {\n      onChar(value)\n    }\n  }\n  useEffect(() => {\n    const listener = (e: KeyboardEvent) => {\n      if (e.code === 'Enter') {\n        onEnter()\n      } else if (e.code === 'Backspace') {\n        onDelete()\n      } else {\n        const key = localeAwareUpperCase(e.key)\n        // TODO: check this test if the range works with non-english letters\n        if (key.length === 1 && key >= '0' && key <= '9') {\n          onChar(key)\n        }\n      }\n    }\n    window.addEventListener('keyup', listener)\n    return () => {\n      window.removeEventListener('keyup', listener)\n    }\n  }, [onEnter, onDelete, onChar])\n\n  return (\n    <div>\n      <div className=\"flex justify-center mb-1\">\n        {['1', '2', '3'].map((key) => (\n          <Key\n            value={key}\n            key={key}\n            width={60}\n            onClick={onClick}\n            status={charStatuses[key]}\n            isRevealing={isRevealing}\n          />\n        ))}\n      </div>\n      <div className=\"flex justify-center mb-1\">\n        {['4', '5', '6'].map((key) => (\n          <Key\n            value={key}\n            key={key}\n            width={60}\n            onClick={onClick}\n            status={charStatuses[key]}\n            isRevealing={isRevealing}\n          />\n        ))}\n      </div>\n      <div className=\"flex justify-center mb-1\">\n        {['7', '8', '9'].map((key) => (\n          <Key\n            value={key}\n            key={key}\n            width={60}\n            onClick={onClick}\n            status={charStatuses[key]}\n            isRevealing={isRevealing}\n          />\n        ))}\n      </div>\n      <div className=\"flex justify-center\">\n        {['0'].map((key) => (\n          <Key\n            value={key}\n            key={key}\n            width={60}\n            onClick={onClick}\n            status={charStatuses[key]}\n            isRevealing={isRevealing}\n          />\n        ))}\n        <Key width={60} value=\"DELETE\" onClick={onClick}>\n          {DELETE_TEXT}\n        </Key>\n        <Key width={60} value=\"ENTER\" onClick={onClick}>\n          {ENTER_TEXT}\n        </Key>\n        <Key width={60} value=\"Reset\" onClick={onClick}>\n          {RELOAD}\n        </Key>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}